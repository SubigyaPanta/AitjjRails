<pre>
yashwanth@yashwanth-Dell-System-XPS-L502X:~$ sudo su postgres
[sudo] password for yashwanth:
postgres@yashwanth-Dell-System-XPS-L502X:/home/yashwanth$ psql
psql (9.5.4)
Type "help" for help.

postgres=# create table my_stocks (
postgres(# symbol
postgres(# varchar(20) not null,
postgres(# n_shares
postgres(# integer not null,
postgres(# date_acquired
postgres(# date not null);
CREATE TABLE
postgres=# copy my_stocks from '/home/yashwanth/Desktop/stocks';
COPY 5

postgres=# select * from my_stocks;
symbol | n_shares | date_acquired
--------+----------+---------------
pvv    |     1000 | 2002-09-01
axis   |     2000 | 2002-08-02
icici  |     3000 | 2002-07-01
hdfc   |     4000 | 2003-08-05
reddys |     5000 | 2005-05-02
(5 rows)

postgres=# create table stock_prices as select symbol,current_date as quote_date,36.69 as price from my_stocks;

SELECT 5

postgres=# select * from stock_prices;

symbol | quote_date | price
--------+------------+-------
pvv    | 2016-09-06 | 36.69
axis   | 2016-09-06 | 36.69
icici  | 2016-09-06 | 36.69
hdfc   | 2016-09-06 | 36.69
reddys | 2016-09-06 | 36.69
(5 rows)
postgres=# create table newly_acquired_stocks (
postgres(# symbol
postgres(# varchar(20) not null,
postgres(# n_shares
postgres(# integer not null,
postgres(# date_acquired
postgres(# date not null
postgres(# );
CREATE TABLE

postgres=# insert into newly_acquired_stocks(symbol,n_shares,date_acquired) select my_stocks.symbol,my_stocks.n_shares,my_stocks.date_acquired from my_stocks where my_stocks.symbol='pvv' or my_stocks.symbol='axis';

INSERT 0 2

postgres=# select * from newly_acquired_stocks; symbol | n_shares | date_acquired
--------+----------+---------------
pvv    |     1000 | 2002-09-01
axis   |     2000 | 2002-08-02
(2 rows)


postgres=# SELECT my_stocks.symbol as "Symbol", my_stocks.n_shares as "Number of shares", stock_prices.price/my_stocks.n_shares as "Price per share", stock_prices.price as "Current Value" FROM stock_prices JOIN my_stocks ON my_stocks.symbol = stock_prices.symbol;

Symbol | Number of shares |    Price per share     | Current Value
--------+------------------+------------------------+---------------
pvv    |             1000 | 0.03669000000000000000 |         36.69
axis   |             2000 | 0.01834500000000000000 |         36.69
icici  |             3000 | 0.01223000000000000000 |         36.69
hdfc   |             4000 | 0.00917250000000000000 |         36.69
reddys |             5000 | 0.00733800000000000000 |         36.69
(5 rows)


postgres=# insert into my_stocks (symbol, n_shares, date_acquired) values ('bsnl','1002','11/11/2011');
INSERT 0 1
postgres=# select *from my_stocks
postgres-# ;
symbol | n_shares | date_acquired
--------+----------+---------------
pvv    |     1000 | 2002-09-01
axis   |     2000 | 2002-08-02
icici  |     3000 | 2002-07-01
hdfc   |     4000 | 2003-08-05
reddys |     5000 | 2005-05-02
bsnl   |     1002 | 2011-11-11
(6 rows)


postgres=# SELECT my_stocks.symbol as "Symbol", my_stocks.n_shares as "Number of shares", stock_prices.price as "Price per share", stock_prices.price*n_shares as "Current Value" FROM stock_prices JOIN my_stocks ON my_stocks.symbol = stock_prices.symbol;

Symbol | Number of shares | Price per share | Current Value
--------+------------------+-----------------+---------------
pvv    |             1000 |           36.69 |      36690.00
axis   |             2000 |           36.69 |      73380.00
icici  |             3000 |           36.69 |     110070.00
hdfc   |             4000 |           36.69 |     146760.00
reddys |             5000 |           36.69 |     183450.00
(5 rows)

postgres=# SELECT my_stocks.symbol as "Symbol", my_stocks.n_shares as "Number of shares", stock_prices.price as "Price per share", stock_prices.price*n_shares as "Current Value" FROM stock_prices FULL OUTER JOIN my_stocks ON my_stocks.symbol = stock_prices.symbol;

Symbol | Number of shares | Price per share | Current Value
--------+------------------+-----------------+---------------
pvv    |             1000 |           36.69 |      36690.00
axis   |             2000 |           36.69 |      73380.00
icici  |             3000 |           36.69 |     110070.00
hdfc   |             4000 |           36.69 |     146760.00
reddys |             5000 |           36.69 |     183450.00
bsnl   |             1002 |                 |
(6 rows)


wae_development=# \df+ portfolio_value
List of functions
Schema |      Name       | Result data type |   Argument data types    |  Type  | Security | Volatility |  Owner   | Language |           Source code           | Description
--------+-----------------+------------------+--------------------------+--------+----------+------------+----------+----------+---------------------------------+-------------
public | portfolio_value | integer          | symbol character varying | normal | invoker  | volatile   | postgres | plpgsql  |                                +|
|                 |                  |                          |        |          |            |          |          | DECLARE                        +|
|                 |                  |                          |        |          |            |          |          | val integer;                   +|
|                 |                  |                          |        |          |            |          |          | i integer := 0;                +|
|                 |                  |                          |        |          |            |          |          | letter char(1);                +|
|                 |                  |                          |        |          |            |          |          |                                +|
|                 |                  |                          |        |          |            |          |          | BEGIN                          +|
|                 |                  |                          |        |          |            |          |          | val := 0;                      +|
|                 |                  |                          |        |          |            |          |          | WHILE i <= LENGTH(symbol)      +|
|                 |                  |                          |        |          |            |          |          | LOOP                           +|
|                 |                  |                          |        |          |            |          |          | letter := SUBSTR(symbol, i, 1);+|
|                 |                  |                          |        |          |            |          |          | val := val + ascii(letter);    +|
|                 |                  |                          |        |          |            |          |          | i := i + 1;                    +|
|                 |                  |                          |        |          |            |          |          | END LOOP;                      +|
|                 |                  |                          |        |          |            |          |          | return val;                    +|
|                 |                  |                          |        |          |            |          |          | END;                           +|
|                 |                  |                          |        |          |            |          |          |                                 |

wae_development=# UPDATE stock_prices SET price=portfolio_value(symbol);
UPDATE 5

wae_development=# SELECT * from stock_prices;
symbol | quote_date | price
--------+------------+-------
pvv    | 2016-09-07 |   348
axis   | 2016-09-07 |   437
icici  | 2016-09-07 |   513
hdfc   | 2016-09-07 |   405
reddys | 2016-09-07 |   651
(5 rows)

Second FUNCTION:

CREATE OR REPLACE FUNCTION second_portfolio_value() RETURNS integer AS $$
	DECLARE
		c1 CURSOR FOR SELECT my_stocks.symbol as "Symbol", my_stocks.n_shares as shares, stock_prices.price as price, stock_prices.price*n_shares as "Current Value"
				FROM stock_prices
				JOIN my_stocks ON my_stocks.symbol = stock_prices.symbol;
		val integer := 0;

	BEGIN
		FOR pointer in c1
		LOOP
			val := val + pointer.shares*pointer.price;
		END LOOP;
		return val;
	END;
$$ LANGUAGE plpgsql;

wae_development=# \df+ second_portfolio_value
                                                                                                                                              List of functions
 Schema |          Name          | Result data type | Argument data types |  Type  | Security | Volatility |  Owner   | Language |                                                                          Source code                                                                          | Description
--------+------------------------+------------------+---------------------+--------+----------+------------+----------+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------
 public | second_portfolio_value | integer          |                     | normal | invoker  | volatile   | postgres | plpgsql  |                                                                                                                                                              +|
        |                        |                  |                     |        |          |            |          |          | DECLARE                                                                                                                                                      +|
        |                        |                  |                     |        |          |            |          |          | c1 CURSOR FOR SELECT my_stocks.symbol as "Symbol", my_stocks.n_shares as shares, stock_prices.price as price, stock_prices.price*n_shares as "Current Value" +|
        |                        |                  |                     |        |          |            |          |          | FROM stock_prices                                                                                                                                            +|
        |                        |                  |                     |        |          |            |          |          | JOIN my_stocks ON my_stocks.symbol = stock_prices.symbol;                                                                                                    +|
        |                        |                  |                     |        |          |            |          |          | val integer := 0;                                                                                                                                            +|
        |                        |                  |                     |        |          |            |          |          |                                                                                                                                                              +|
        |                        |                  |                     |        |          |            |          |          | BEGIN                                                                                                                                                        +|
        |                        |                  |                     |        |          |            |          |          | FOR pointer in c1                                                                                                                                            +|
        |                        |                  |                     |        |          |            |          |          | LOOP                                                                                                                                                         +|
        |                        |                  |                     |        |          |            |          |          | val := val + pointer.shares*pointer.price;                                                                                                                   +|
        |                        |                  |                     |        |          |            |          |          | END LOOP;                                                                                                                                                    +|
        |                        |                  |                     |        |          |            |          |          | return val;                                                                                                                                                  +|
        |                        |                  |                     |        |          |            |          |          | END;                                                                                                                                                         +|
        |                        |                  |                     |        |          |            |          |          |                                                                                                                                                               |

wae_development=# select second_portfolio_value();
 second_portfolio_value
------------------------
                7636000
(1 row)



wae_development=#
wae_development=# INSERT INTO my_stocks ( symbol, n_shares, date_acquired)
rent_date as date_acquiredy_stocks.symbol as symbol, n_shares*2 as n_shares, cur
wae_development-# FROM my_stocks
wae_development-# JOIN stock_prices ON my_stocks.symbol=stock_prices.symbol
m stock_prices);# where stock_prices.price > (SELECT avg(stock_prices.price) fro
INSERT 0 2
wae_development=# INSERT INTO my_stocks ( symbol, n_shares, date_acquired)
acquiredy_stocks.symbol as symbol, n_shares*2 as n_shares, current_date as date_a
FROM my_stocks
JOIN stock_prices ON my_stocks.symbol=stock_prices.symbol
where stock_prices.price > (SELECT avg(stock_prices.price) from stock_prices);
INSERT 0 4
wae_development=# select * from my_stocks
wae_development-# ;
 symbol | n_shares | date_acquired
--------+----------+---------------
 pvv    |     1000 | 2002-09-01
 axis   |     2000 | 2002-08-02
 icici  |     3000 | 2002-07-01
 hdfc   |     4000 | 2003-08-05
 reddys |     5000 | 2005-05-02
 appl   |     1500 | 2016-05-05
 icici  |     6000 | 2016-09-08
 reddys |    10000 | 2016-09-08
 icici  |     6000 | 2016-09-08
 reddys |    10000 | 2016-09-08
 icici  |    12000 | 2016-09-08
 reddys |    20000 | 2016-09-08
(12 rows)


wae_development=# SELECT my_stocks.symbol, sum(n_shares)
wae_development-# FROM my_stocks
wae_development-# GROUP BY my_stocks.symbol;
 symbol |  sum
--------+-------
 appl   |  1500
 pvv    |  1000
 hdfc   |  4000
 axis   |  2000
 icici  | 27000
 reddys | 45000
(6 rows)


wae_development=#
wae_development=# SELECT my_stocks.symbol, sum(stock_prices.price)
wae_development-# FROM my_stocks
wae_development-# JOIN stock_prices ON my_stocks.symbol = stock_prices.symbol
wae_development-# GROUP BY my_stocks.symbol;
 symbol | sum
--------+------
 pvv    |  348
 hdfc   |  405
 axis   |  437
 icici  | 2052
 reddys | 2604
(5 rows)



wae_development=# SELECT my_stocks.symbol, sum(n_shares), sum(n_shares*stock_prices.price)
FROM my_stocks
JOIN stock_prices ON my_stocks.symbol = stock_prices.symbol
GROUP BY my_stocks.symbol
HAVING count(my_stocks.symbol) > 1;
 symbol |  sum  |   sum
--------+-------+----------
 icici  | 27000 | 13851000
 reddys | 45000 | 29295000
(2 rows)

13.

wae_development=# CReate view stocks_i_like as SELECT my_stocks.symbol, sum(n_shares), sum(n_shares*stock_prices.price) as my_value
FROM my_stocks
JOIN stock_prices ON my_stocks.symbol = stock_prices.symbol
GROUP BY my_stocks.symbol
HAVING count(my_stocks.symbol) > 1 ;
ERROR:  relation "stocks_i_like" already exists
wae_development=# drop view stocks_i_like;
DROP VIEW
wae_development=# CReate view stocks_i_like as SELECT my_stocks.symbol, sum(n_shares), sum(n_shares*stock_prices.price) as my_value
FROM my_stocks
JOIN stock_prices ON my_stocks.symbol = stock_prices.symbol
GROUP BY my_stocks.symbol
HAVING count(my_stocks.symbol) > 1 ;
CREATE VIEW
wae_development=# select stocks_i_like;
ERROR:  column "stocks_i_like" does not exist
LINE 1: select stocks_i_like;
               ^
wae_development=# select * from stocks_i_like;
 symbol |  sum  | my_value
--------+-------+----------
 icici  | 27000 | 13851000
 reddys | 45000 | 29295000
(2 rows)






</pre>
